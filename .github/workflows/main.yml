name: Laravel CI
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  laravel-tests:
    runs-on: ubuntu-latest
    
    steps:
    - name: Setup PHP
      uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
      with:
        php-version: '8.2'
        extensions: mbstring, xml, ctype, iconv, intl, pdo_mysql, bcmath, curl, zip, gd, dom, fileinfo, openssl, tokenizer
        coverage: none
        
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"
      
    - name: Create required directories
      run: |
        mkdir -p bootstrap/cache
        mkdir -p storage/framework/cache
        mkdir -p storage/framework/sessions
        mkdir -p storage/framework/views
        mkdir -p storage/logs
        
    - name: Set directory permissions
      run: |
        chmod -R 775 storage bootstrap/cache
        chown -R www-data:www-data storage bootstrap/cache
        
    - name: Validate composer.json
      run: composer validate --no-check-publish
      
    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-
          
    - name: Install Dependencies
      if: steps.composer-cache.outputs.cache-hit != 'true'
      run: composer install --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist --ignore-platform-reqs
      
    - name: Update Dependencies (if needed)
      if: failure()
      run: composer update --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist --ignore-platform-reqs
      
    - name: Generate key
      run: php artisan key:generate
      
    - name: Clear caches
      run: |
        php artisan cache:clear
        php artisan config:clear
        php artisan view:clear
        
    - name: Optimize autoloader
      run: composer dump-autoload --optimize
      
    - name: Create Database
      run: |
        mkdir -p database
        touch database/database.sqlite
        
    - name: Execute tests
      env:
        DB_CONNECTION: sqlite
        DB_DATABASE: database/database.sqlite
      run: php artisan test
